/**
* @license Apache-2.0
*
* Copyright (c) 2024 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var isnan = require( '@stdlib/math/base/assert/is-nan' );
var gcd = require( '@stdlib/math/base/special/gcd' );


// MAIN //

/**
* Computes the least common multiple (LCM) of two floating-point numbers.
*
* @param {number} a - first floating-point number
* @param {number} b - second floating-point number
* @returns {number} least common multiple of `a` and `b`
*
* @example
* var v = lcmf( 21.0, 6.0 );
* // returns 42.0
*
* @example
* var v = lcmf( 3.0, 7.0 );
* // returns 21.0
*
* @example
* var v = lcmf( 0.0, 5.0 );
* // returns 0.0
*
* @example
* var v = lcmf( NaN, 5.0 );
* // returns NaN
*/
function lcmf( a , b ) {
    var result;
    var i;

    if ( isnan( a ) || isnan( b ) || ( a == 0 ) || ( b == 0 ) ) {
        return 0.0;
    }

    result = 1;
    // Note: we rely on `gcd` to perform further argument validation...

    var g = gcd( a, b );

    if ( g === 0 ) {
        return NaN;
    }

    result = a * b / g;

    return result;
}


// EXPORTS //

module.exports = lcmf;
