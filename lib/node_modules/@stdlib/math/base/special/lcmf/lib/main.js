/**
* @license Apache-2.0
*
* Copyright (c) 2024 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var isnan = require( '@stdlib/math/base/assert/is-nan' );
var gcd = require( '@stdlib/math/base/special/gcd' );


// MAIN //

/**
* Computes the least common multiple of all integers from 1 to `n` (Least Common Multiple Function, LCMF).
*
* @param {integer} n - integer
* @returns {integer} least common multiple of all integers from 1 to `n`
*
* @example
* var v = lcmf( 5 );
* // returns 60
*
* @example
* var v = lcmf( 10 );
* // returns 2520
*
* @example
* var v = lcmf( NaN );
* // returns NaN
*/
function lcmf( n ) {
    var result;
    var i;

    if ( isnan( n ) || n < 1 ) {
        return NaN;
    }
    if ( n === 1 ) {
        return 1;
    }
    result = 1;
    // Note: we rely on `gcd` to perform further argument validation...
    for ( i = 2; i <= n; i++ ) {
        result = (result / gcd( result, i )) * i;
    }
    return result;
}


// EXPORTS //

module.exports = lcmf;
